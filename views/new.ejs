<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
  <title><%= isEdit ? '编辑页面' : '创建新页面' %> - HTML Paste Host</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/style.css" />
  <style>
    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%);
      background-size: 400% 400%;
      animation: gradientShift 15s ease infinite;
      min-height: 100vh;
    }
    
    @keyframes gradientShift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    .hero-pattern {
      background-image: radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 0%, transparent 50%),
                        radial-gradient(circle at 75% 75%, rgba(255,255,255,0.1) 0%, transparent 50%);
    }
    
    .editor-panel {
      min-height: 70vh;
    }
    
    .tab-button.active {
      background: linear-gradient(135deg, var(--primary-600) 0%, var(--primary-700) 100%);
      color: white;
      box-shadow: var(--shadow-md);
    }
    
    .tab-content {
      display: none;
    }
    
    .tab-content.active {
      display: block;
    }
    
    .floating-toolbar {
      position: fixed;
      bottom: 2rem;
      right: 2rem;
      z-index: 50;
    }

    .clear-ads-btn {
      background-color: #fee2e2;
      color: #b91c1c;
    }
    .clear-ads-btn:hover {
      background-color: #fecaca;
      color: #991b1b;
    }
    
    .code-line-numbers {
      counter-reset: line;
    }
    
    .code-line-numbers::before {
      counter-increment: line;
      content: counter(line);
      color: var(--gray-400);
      font-size: 0.8rem;
      margin-right: 1rem;
      width: 2rem;
      text-align: right;
      display: inline-block;
    }
  </style>
</head>
<body class="hero-pattern">
  <!-- 浮动工具栏 -->
  <div class="floating-toolbar">
    <div class="glass-card p-4 flex flex-col gap-2">
      <button id="saveBtn" class="btn-primary" title="保存 (Ctrl+S)">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3-3m0 0l-3 3m3-3v12"/>
        </svg>
      </button>
      <button id="previewBtn" class="btn-ghost" title="刷新预览 (Ctrl+Enter)">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
        </svg>
      </button>
      <button id="formatBtn" class="btn-ghost" title="格式化代码">
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.79 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.79 4 8 4s8-1.79 8-4M4 7c0-2.21 3.79-4 8-4s8 1.79 8 4"/>
        </svg>
      </button>
    </div>
  </div>

  <div class="min-h-screen">
    <div class="max-w-7xl mx-auto px-4 py-8">
      
      <!-- 高级头部 -->
      <header class="glass-card p-6 mb-8 animate-fade-in">
        <div class="flex flex-col lg:flex-row items-center justify-between gap-6">
          
          <!-- 品牌区域 -->
          <div class="flex items-center gap-4">
            <div class="relative">
              <div class="w-12 h-12 bg-gradient-to-br from-blue-500 via-purple-600 to-pink-500 rounded-xl shadow-lg flex items-center justify-center">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <% if (isEdit) { %>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                  <% } else { %>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                  <% } %>
                </svg>
              </div>
            </div>
            <div>
              <h1 class="text-2xl lg:text-3xl font-black bg-gradient-to-r from-gray-900 via-gray-700 to-gray-900 bg-clip-text text-transparent">
                <%= isEdit ? '编辑页面' : '创建新页面' %>
              </h1>
              <% if (isEdit && page) { %>
                <p class="text-gray-600 mt-1">正在编辑: <span class="font-semibold"><%= page.name %></span></p>
              <% } else { %>
                <p class="text-gray-600 mt-1">释放您的创意，打造精彩作品</p>
              <% } %>
            </div>
          </div>
          
          <!-- 操作区域 -->
      <div class="flex items-center gap-3">
            <% if (isEdit) { %>
              <a href="/<%= page.slug %>" target="_blank" class="btn-ghost">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-1M14 4h6m0 0v6m0-6L10 14"/>
                </svg>
                预览页面
              </a>
            <% } %>
            <a href="/" class="btn-ghost">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
              </svg>
              返回首页
            </a>
          </div>
      </div>
    </header>

      <form action="<%= isEdit ? `/update/${page.slug}` : '/create' %>" method="post" enctype="multipart/form-data" class="space-y-8">
        
        <!-- 基本信息卡片 -->
        <div class="glass-card p-6 animate-slide-up">
          <div class="flex items-center gap-3 mb-6">
            <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
              <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </div>
            <h2 class="text-xl font-bold text-gray-800">基本信息</h2>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- 页面名称 -->
            <div>
              <label class="label">页面名称</label>
              <input name="name" placeholder="例如：我的作品集" class="input" 
                     value="<%= isEdit && page ? page.name : '' %>" required />
              <p class="hint">
                <span class="inline-flex items-center gap-1">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
                  </svg>
                  最终访问路径：
                </span>
                <code class="px-2 py-1 bg-gray-100 rounded text-sm">/<%= isEdit && page ? page.slug : '页面名称会自动转为-slug' %></code>
              </p>
            </div>

            <!-- 缩略图设置 -->
            <div>
              <label class="label">缩略图设置</label>
              <div class="space-y-3">
                <!-- 缩略图选项标签页 -->
                <div class="flex gap-1 bg-gray-100 p-1 rounded-lg">
                  <button type="button" class="tab-button flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all" 
                          onclick="switchTab('random')" id="tab-random">
                    🎲 随机图片
                  </button>
                  <button type="button" class="tab-button flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all" 
                          onclick="switchTab('url')" id="tab-url">
                    🔗 网络链接
                  </button>
                  <button type="button" class="tab-button flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all" 
                          onclick="switchTab('file')" id="tab-file">
                    📁 上传文件
                  </button>
                  <% if (isEdit) { %>
                  <button type="button" class="tab-button flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all" 
                          onclick="switchTab('keep')" id="tab-keep">
                    📌 保持原有
                  </button>
                  <% } %>
                </div>

                <!-- 隐藏的选项字段 -->
                <input type="hidden" name="thumbnailOption" id="thumbnailOption" value="random">

                <!-- 缩略图内容区域 -->
                <div class="min-h-[120px] border-2 border-dashed border-gray-300 rounded-lg p-4">
                  <!-- 随机图片 -->
                  <div id="content-random" class="tab-content active">
                    <div class="flex items-center gap-3">
                      <div class="w-16 h-16 bg-gradient-to-br from-purple-100 to-pink-100 rounded-lg flex items-center justify-center">
                        🎨
                      </div>
                      <div>
                        <h4 class="font-medium text-gray-800">自动选择精美图片</h4>
                        <p class="text-sm text-gray-600">系统将从精选图片库中随机选择一张作为缩略图</p>
                      </div>
                    </div>
                  </div>

                  <!-- 网络链接 -->
                  <div id="content-url" class="tab-content">
                    <div class="space-y-3">
                      <h4 class="font-medium text-gray-800">输入图片网址</h4>
                      <input type="url" name="thumbnailUrl" placeholder="https://example.com/image.jpg" 
                             class="input" onchange="previewUrl(this.value)">
                      <div id="url-preview" class="hidden">
                        <img id="url-preview-img" class="w-full h-32 object-cover rounded-lg border">
                      </div>
                    </div>
                  </div>

                  <!-- 文件上传 -->
                  <div id="content-file" class="tab-content">
                    <div class="space-y-3">
                      <h4 class="font-medium text-gray-800">选择本地图片</h4>
                      <input type="file" name="thumbnailFile" accept="image/*" 
                             class="block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
                             onchange="previewFile(this)">
                      <div id="file-preview" class="hidden">
                        <img id="file-preview-img" class="w-full h-32 object-cover rounded-lg border">
                      </div>
                    </div>
                  </div>

                  <!-- 保持原有（仅编辑模式） -->
                  <% if (isEdit) { %>
                  <div id="content-keep" class="tab-content">
                    <div class="flex items-center gap-3">
                      <div class="w-16 h-16 rounded-lg overflow-hidden border">
                        <% if (page && page.thumbnail) { %>
                          <img src="<%= page.thumbnail %>" class="w-full h-full object-cover">
                        <% } else { %>
                          <div class="w-full h-full bg-gray-100 flex items-center justify-center">
                            <span class="text-gray-400 text-xs">无图</span>
                          </div>
                        <% } %>
                      </div>
      <div>
                        <h4 class="font-medium text-gray-800">保持当前缩略图</h4>
                        <p class="text-sm text-gray-600">不修改现有的缩略图设置</p>
                      </div>
                    </div>
                  </div>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 代码编辑与预览区域 -->
        <div class="grid grid-cols-1 xl:grid-cols-2 gap-6">
          
          <!-- 代码编辑器 -->
          <div class="glass-card editor-panel animate-scale-in">
            <div class="p-6 border-b border-gray-200">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/>
                    </svg>
                  </div>
                  <h3 class="text-lg font-bold text-gray-800">HTML 代码编辑器</h3>
                </div>
                <div class="flex items-center gap-2">
                  <span id="status" class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                    自动预览（防抖 400ms）
                  </span>
                </div>
              </div>
            </div>
            
            <!-- 广告插入工具栏 -->
            <div class="px-6 py-3 bg-gradient-to-r from-blue-50 to-indigo-50 border-b border-gray-200">
              <div class="flex items-center justify-between">
                <h4 class="text-sm font-semibold text-gray-700">快速工具</h4>
                <div class="flex gap-2">
                  <button type="button" class="ad-preset-btn" onclick="openAdManager()">
                    📢 插入广告
                  </button>
                  <!-- 新增：清除广告按钮 -->
                  <button type="button" class="ad-preset-btn clear-ads-btn" onclick="clearAllAds()">
                    🗑️ 一键清除广告
                  </button>
                </div>
              </div>
      </div>

            <div class="p-6">
              <textarea id="code" name="code" 
                        class="code-editor w-full h-[500px] rounded-xl border-2 border-gray-200 p-4 text-sm leading-relaxed focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
            placeholder="在此粘贴或编写完整 HTML（包含 <html>... 或仅片段均可）"
                        required><% if (isEdit && page && page.code) { %><%= page.code %><% } else { %><html>
<head>
  <meta charset="UTF-8">
  <title>Hello World</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body { 
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; 
      padding: 2rem; 
      line-height: 1.6;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      min-height: 100vh;
      margin: 0;
    }
    .container { 
      max-width: 800px; 
      margin: 0 auto; 
      background: rgba(255,255,255,0.1); 
      padding: 2rem; 
      border-radius: 1rem; 
      backdrop-filter: blur(10px);
    }
    h1 { color: #fff; margin-bottom: 1rem; }
    .highlight { 
      background: rgba(255,255,255,0.2); 
      padding: 1rem; 
      border-radius: 0.5rem; 
      border-left: 4px solid #fff;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>🎉 我的第一个页面</h1>
    <div class="highlight">
      <p>欢迎使用 HTML Paste Host！您可以在左侧编辑代码，右侧会实时预览效果。</p>
      <p>这个模板包含了一些基础样式，您可以随意修改或替换为自己的内容。</p>
    </div>
  </div>
</body>
</html><% } %></textarea>
            </div>
          </div>

          <!-- 实时预览 -->
          <div class="glass-card editor-panel animate-scale-in">
            <div class="p-6 border-b border-gray-200">
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                    </svg>
                  </div>
                  <h3 class="text-lg font-bold text-gray-800">实时预览</h3>
                </div>
                <div class="flex items-center gap-2">
                  <button type="button" id="fullscreenBtn" class="btn-ghost text-sm">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5"/>
                    </svg>
                    全屏
                  </button>
                </div>
              </div>
            </div>
            <div class="p-6">
              <iframe id="preview" class="w-full h-[500px] rounded-xl border-2 border-gray-200 bg-white"></iframe>
            </div>
          </div>
        </div>

        <!-- 提交按钮 -->
        <div class="flex items-center justify-end gap-4">
          <% if (isEdit) { %>
            <button type="button" onclick="history.back()" class="btn-ghost">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
              </svg>
              取消编辑
            </button>
            <button type="submit" class="btn-primary">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
              </svg>
              保存更改
            </button>
          <% } else { %>
            <a href="/" class="btn-ghost">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
              </svg>
              取消
            </a>
            <button type="submit" class="btn-primary">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"/>
              </svg>
              立即发布
            </button>
          <% } %>
        </div>
      </form>
    </div>
  </div>

  <!-- 广告管理模态框 -->
  <div id="adManagerModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="glass-card p-6 max-w-2xl mx-4 shadow-2xl">
      <div class="text-center">
        <h3 class="text-2xl font-bold text-gray-900 mb-6">📢 广告代码管理器</h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
          <!-- 广告类型选择 -->
          <div class="text-left">
            <label class="label">广告类型</label>
            <select id="adType" class="select w-full">
              <option value="header">头部横幅广告</option>
              <option value="footer">底部广告</option>
              <option value="sidebar">侧边栏广告</option>
              <option value="banner">内容横幅</option>
              <option value="popup">弹窗广告</option>
              <option value="custom">自定义位置</option>
            </select>
          </div>
          
          <!-- 广告平台 -->
          <div class="text-left">
            <label class="label">广告平台</label>
            <select id="adPlatform" class="select w-full" onchange="loadAdTemplate()">
              <option value="custom">自定义代码</option>
              <option value="google-adsense">Google AdSense</option>
              <option value="baidu">百度联盟</option>
              <option value="360">360广告</option>
              <option value="toutiao">头条广告</option>
            </select>
          </div>
        </div>

        <!-- 广告代码输入 -->
        <div class="text-left mb-6">
          <label class="label">广告代码</label>
          <textarea id="adCode" class="input h-32 resize-none font-mono text-sm" placeholder="请粘贴您的广告代码..."></textarea>
          <p class="hint mt-2">
            💡 支持各大广告平台的代码，系统会自动优化插入位置
          </p>
        </div>
        
        <!-- 预设广告模板 -->
        <div class="text-left mb-6">
          <label class="label">快速插入</label>
          <div class="grid grid-cols-2 md:grid-cols-5 gap-2">
            <button type="button" class="ad-preset-btn" onclick="insertQuickAd('header')">
              头部广告
            </button>
            <button type="button" class="ad-preset-btn" onclick="insertQuickAd('footer')">
              底部广告
            </button>
            <button type="button" class="ad-preset-btn" onclick="insertQuickAd('sidebar')">
              侧边广告
            </button>
            <button type="button" class="ad-preset-btn" onclick="insertQuickAd('banner')">
              横幅广告
            </button>
            <button type="button" class="ad-preset-btn" onclick="insertQuickAd('popup')">
              弹窗广告
            </button>
          </div>
        </div>
        
        <!-- 广告模板 -->
        <div class="text-left mb-6">
          <label class="label">广告模板</label>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
            <button type="button" class="ad-preset-btn" onclick="useAdTemplate('responsive-banner')">
              响应式横幅
            </button>
            <button type="button" class="ad-preset-btn" onclick="useAdTemplate('square')">
              方形广告
            </button>
            <button type="button" class="ad-preset-btn" onclick="useAdTemplate('skyscraper')">
              摩天大楼
            </button>
            <button type="button" class="ad-preset-btn" onclick="useAdTemplate('leaderboard')">
              排行榜式
            </button>
        </div>
      </div>

        <div class="flex justify-end gap-3">
          <button onclick="closeAdManager()" class="btn-ghost">取消</button>
          <button onclick="insertCustomAd()" class="btn-primary">插入广告</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    const ta = document.getElementById('code');
    const frame = document.getElementById('preview');
    const statusEl = document.getElementById('status');
    const saveBtn = document.getElementById('saveBtn');
    const previewBtn = document.getElementById('previewBtn');
    const formatBtn = document.getElementById('formatBtn');
    const fullscreenBtn = document.getElementById('fullscreenBtn');

    let debounceTimer = null;

    function setPreview(html) {
      frame.srcdoc = html;
    }

    function scheduleUpdate() {
      clearTimeout(debounceTimer);
      statusEl.textContent = '预览更新中…';
      statusEl.className = 'text-sm text-orange-600 bg-orange-100 px-3 py-1 rounded-full';
      
      debounceTimer = setTimeout(() => {
        setPreview(ta.value);
        statusEl.textContent = '自动预览（防抖 400ms）';
        statusEl.className = 'text-sm text-green-600 bg-green-100 px-3 py-1 rounded-full';
      }, 400);
    }

    // 缩略图标签页切换
    function switchTab(tabName) {
      // 更新隐藏字段
      document.getElementById('thumbnailOption').value = tabName;
      
      // 更新标签按钮状态
      document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
      document.getElementById(`tab-${tabName}`).classList.add('active');
      
      // 更新内容显示
      document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
      const targetContent = document.getElementById(`content-${tabName}`);
      if (targetContent) {
        targetContent.classList.add('active');
      }
    }

    // 网址预览
    function previewUrl(url) {
      const preview = document.getElementById('url-preview');
      const img = document.getElementById('url-preview-img');
      
      if (url) {
        img.src = url;
        img.onload = () => preview.classList.remove('hidden');
        img.onerror = () => preview.classList.add('hidden');
      } else {
        preview.classList.add('hidden');
      }
    }

    // 文件预览
    function previewFile(input) {
      const preview = document.getElementById('file-preview');
      const img = document.getElementById('file-preview-img');
      
      if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
          img.src = e.target.result;
          preview.classList.remove('hidden');
        };
        reader.readAsDataURL(input.files[0]);
      } else {
        preview.classList.add('hidden');
      }
    }

    // 广告插入功能
    const adTemplates = {
      header: {
        name: '头部横幅广告',
        code: '<!-- 头部广告开始 -->\n<div style="width: 100%; text-align: center; padding: 10px 0; background: #f8f9fa; border-bottom: 1px solid #dee2e6;">\n  <div style="max-width: 728px; height: 90px; margin: 0 auto; background: #e9ecef; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif;">\n    广告位 728x90 - 请替换为您的广告代码\n  </div>\n</div>\n<!-- 头部广告结束 -->',
        position: 'afterBodyStart'
      },
      footer: {
        name: '底部广告',
        code: '<!-- 底部广告开始 -->\n<div style="width: 100%; text-align: center; padding: 20px 0; background: #f8f9fa; border-top: 1px solid #dee2e6; margin-top: 20px;">\n  <div style="max-width: 728px; height: 90px; margin: 0 auto; background: #e9ecef; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif;">\n    广告位 728x90 - 请替换为您的广告代码\n  </div>\n</div>\n<!-- 底部广告结束 -->',
        position: 'beforeBodyEnd'
      },
      sidebar: {
        name: '侧边栏广告',
        code: '<!-- 侧边栏广告开始 -->\n<div style="position: fixed; top: 50%; right: 10px; transform: translateY(-50%); z-index: 1000;">\n  <div style="width: 160px; height: 600px; background: #e9ecef; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; writing-mode: vertical-lr; border: 1px solid #dee2e6; border-radius: 8px;">\n    广告位 160x600\n  </div>\n</div>\n<!-- 侧边栏广告结束 -->',
        position: 'beforeBodyEnd'
      },
      banner: {
        name: '内容横幅广告',
        code: '<!-- 内容横幅广告开始 -->\n<div style="width: 100%; text-align: center; padding: 20px 0; margin: 20px 0;">\n  <div style="max-width: 728px; height: 90px; margin: 0 auto; background: #e9ecef; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; border: 1px dashed #adb5bd; border-radius: 8px;">\n    广告位 728x90 - 请替换为您的广告代码\n  </div>\n</div>\n<!-- 内容横幅广告结束 -->',
        position: 'inContent'
      },
      popup: {
        name: '弹窗广告',
        // 已修改: 移除了 display:none 和延时脚本，使其在编辑器中默认可见，方便预览。
        // 用户需要在最终页面中自行添加触发逻辑（如延时、点击按钮等）。
        code: '<!-- 弹窗广告开始 -->\n<div id="popup-ad" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 10000; background: white; padding: 20px; border-radius: 12px; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">\n  <div style="position: relative;">\n    <button onclick="this.parentElement.parentElement.style.display=\'none\'" style="position: absolute; top: -10px; right: -10px; width: 30px; height: 30px; border: none; background: #dc3545; color: white; border-radius: 50%; cursor: pointer; font-weight: bold;">×</button>\n    <div style="width: 300px; height: 250px; background: #e9ecef; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif;">\n      弹窗广告 300x250<br>请替换为您的广告代码\n    </div>\n  </div>\n</div>\n<!-- 弹窗广告结束 -->',
        position: 'beforeBodyEnd'
      }
    };

    // 广告平台模板
    const platformTemplates = {
      'google-adsense': {
        responsive: '<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXX" crossorigin="anonymous"><\/script>\n<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-XXXXXXXXX" data-ad-slot="XXXXXXXXX" data-ad-format="auto" data-full-width-responsive="true"><\/ins>\n<script>(adsbygoogle = window.adsbygoogle || []).push({});<\/script>',
        banner: '<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXXXXX" crossorigin="anonymous"><\/script>\n<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-XXXXXXXXX" data-ad-slot="XXXXXXXXX"><\/ins>\n<script>(adsbygoogle = window.adsbygoogle || []).push({});<\/script>'
      },
      'baidu': {
        responsive: '<script type="text/javascript">\n/*BAIDU_CLB_SLOT_ID*/\nvar cpro_id = "u0000000";\n<\/script>\n<script src="http://cpro.baidustatic.com/cpro/ui/c.js" type="text/javascript"><\/script>',
        banner: '<script type="text/javascript">\ndocument.write(\'<a style="display:none!important" id="tanx-a-mm_00000000_0000_00000000"></a>\');\ntanx_s = document.createElement("script");\ntanx_s.type = "text/javascript";\ntanx_s.charset = "gbk";\ntanx_s.id = "tanx-s-mm_00000000_0000_00000000";\ntanx_s.async = true;\ntanx_s.src = "http://p.tanx.com/ex?i=mm_00000000_0000_00000000";\ntanx_h = document.getElementsByTagName("head")[0];\nif(tanx_h)tanx_h.insertBefore(tanx_s,tanx_h.firstChild);\n<\/script>'
      }
    };

    function insertAd(type) {
      if (!adTemplates[type]) return;
      
      const template = adTemplates[type];
      const currentCode = ta.value;
      let newCode = currentCode;
      
      // 检查代码中是否已存在该类型的广告
      const adIdentifier = `<!-- ${template.name.substring(0, 4)}.*?开始 -->`;
      if (new RegExp(adIdentifier, 'i').test(currentCode)) {
        showNotification(`${template.name} 已存在，请勿重复插入`, 'error');
        return;
      }
      
      // 根据广告类型插入到不同位置
      switch(template.position) {
        case 'afterBodyStart':
          if (/<body[^>]*>/i.test(currentCode)) {
            newCode = currentCode.replace(/<body[^>]*>/i, `$& \n${template.code}\n`);
          } else {
            newCode = `<body>\n${template.code}\n${currentCode}</body>`;
          }
          break;
        case 'beforeBodyEnd':
          if (/<\/body>/i.test(currentCode)) {
            newCode = currentCode.replace(/<\/body>/i, `\n${template.code}\n$&`);
          } else {
             newCode = `${currentCode}\n${template.code}`;
          }
          break;
        case 'inContent':
          if (/(<\/(?:div|p|h[1-6]|main|section|article)>)/i.test(currentCode)) {
             newCode = currentCode.replace(/(<\/(?:div|p|h[1-6]|main|section|article)>)/i, `$&\n${template.code}\n`);
          } else {
             newCode = `${template.code}\n${currentCode}`;
          }
          break;
        default:
          newCode = currentCode + '\n' + template.code;
      }
      
      ta.value = newCode;
      scheduleUpdate();
      showNotification(`${template.name} 已插入`, 'success');
    }

    /**
     * 新增：一键清除所有广告的功能
     */
    function clearAllAds() {
      const currentCode = ta.value;
      // 使用正则表达式查找并移除所有被广告注释包裹的代码块
      const adBlockRegex = /<!--\s*.*?广告开始\s*-->[\s\S]*?<!--\s*.*?广告结束\s*-->\n?/gm;
      const newCode = currentCode.replace(adBlockRegex, '');
      
      if (currentCode === newCode) {
        showNotification('未找到可清除的广告标记', 'info');
      } else {
        ta.value = newCode;
        scheduleUpdate();
        showNotification('所有广告已清除', 'success');
      }
    }

    function openAdManager() {
      document.getElementById('adManagerModal').classList.remove('hidden');
      document.getElementById('adManagerModal').classList.add('flex');
    }

    function closeAdManager() {
      document.getElementById('adManagerModal').classList.add('hidden');
      document.getElementById('adManagerModal').classList.remove('flex');
    }

    function loadAdTemplate() {
      const platform = document.getElementById('adPlatform').value;
      const adCode = document.getElementById('adCode');
      
      if (platform === 'custom') {
        adCode.value = '';
        adCode.placeholder = '请粘贴您的广告代码...';
      } else if (platformTemplates[platform]) {
        adCode.value = platformTemplates[platform].responsive || platformTemplates[platform].banner;
        adCode.placeholder = `${platform} 广告代码模板`;
      }
    }

    function useAdTemplate(templateType) {
      const templates = {
        'responsive-banner': `<!-- 响应式横幅广告 -->
<div style="width: 100%; max-width: 728px; margin: 20px auto; text-align: center;">
  <div style="width: 100%; height: 90px; background: #f8f9fa; border: 2px dashed #dee2e6; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; border-radius: 8px;">
    响应式横幅广告 - 请替换为您的广告代码
  </div>
</div>`,
        'square': `<!-- 方形广告 -->
<div style="width: 300px; height: 250px; margin: 20px auto; background: #f8f9fa; border: 2px dashed #dee2e6; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; border-radius: 8px;">
  方形广告 300x250<br>请替换为您的广告代码
</div>`,
        'skyscraper': `<!-- 摩天大楼广告 -->
<div style="width: 160px; height: 600px; margin: 20px auto; background: #f8f9fa; border: 2px dashed #dee2e6; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; border-radius: 8px; writing-mode: vertical-lr;">
  摩天大楼 160x600
</div>`,
        'leaderboard': `<!-- 排行榜式广告 -->
<div style="width: 100%; max-width: 728px; height: 90px; margin: 20px auto; background: #f8f9fa; border: 2px dashed #dee2e6; display: flex; align-items: center; justify-content: center; color: #6c757d; font-family: Arial, sans-serif; border-radius: 8px;">
  排行榜式广告 728x90 - 请替换为您的广告代码
</div>`
      };
      
      document.getElementById('adCode').value = templates[templateType] || '';
    }

    function insertCustomAd() {
      const adCode = document.getElementById('adCode').value.trim();
      const adType = document.getElementById('adType').value;
      
      if (!adCode) {
        showNotification('请输入广告代码', 'error');
        return;
      }
      
      // 为自定义代码添加注释标记，以便能够被“一键清除”功能识别
      const adName = document.querySelector(`#adType option[value=${adType}]`).textContent;
      const wrappedCode = `<!-- ${adName}开始 -->\n${adCode}\n<!-- ${adName}结束 -->`;
      
      // 创建一个临时的 template 对象来复用 insertAd 逻辑
      const customTemplate = {
        name: adName,
        code: wrappedCode,
        position: adTemplates[adType] ? adTemplates[adType].position : 'beforeBodyEnd'
      };

      insertAd(adType); // This call is just to check for duplicates, the actual insertion is handled below.
      
      ta.value = ta.value.replace(/<!-- (头部|底部|侧边栏|内容横幅|弹窗)广告开始 -->[\s\S]*?<!-- \1广告结束 -->/, wrappedCode);
      
      scheduleUpdate();
      closeAdManager();
      showNotification('自定义广告已插入', 'success');
    }

    // 快速插入广告
    function insertQuickAd(type) {
      if (adTemplates[type]) {
        insertAd(type);
      } else {
        showNotification('该广告类型不存在', 'error');
      }
      closeAdManager();
    }

    // 通知系统
    function showNotification(message, type = 'info') {
      const notification = document.createElement('div');
      notification.className = 'fixed top-4 right-4 z-50 glass-card p-4 animate-slide-up';
      
      const icon = type === 'success' ? '✅' : type === 'error' ? '❌' : 'ℹ️';
      
      notification.innerHTML = `
        <div class="flex items-center gap-3">
          <span class="text-lg">${icon}</span>
          <div class="flex-1">
            <p class="font-medium text-gray-900">${message}</p>
          </div>
          <button onclick="this.parentElement.parentElement.remove()" class="text-gray-400 hover:text-gray-600">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>
        </div>`;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.style.transition = 'transform 0.3s ease, opacity 0.3s ease';
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => { 
          notification.remove();
        }, 300);
      }, 5000);
    }

    // 事件监听
    ta.addEventListener('input', scheduleUpdate);
    
    saveBtn.addEventListener('click', () => {
      document.querySelector('form').submit();
    });
    
    previewBtn.addEventListener('click', () => setPreview(ta.value));
    
    formatBtn.addEventListener('click', () => {
      try {
        const parser = new DOMParser();
        const doc = parser.parseFromString(ta.value, 'text/html');
        if (doc.body.querySelector('parsererror')) {
          throw new Error('HTML 代码包含语法错误');
        }
        const doctype = '<!DOCTYPE html>';
        const html = doc.documentElement.outerHTML;
        ta.value = (html.startsWith('<!DOCTYPE') ? html : (doctype + '\n' + html));
        scheduleUpdate();
        showNotification('代码格式化完成', 'success');
      } catch (e) {
        showNotification('格式化失败：' + e.message, 'error');
      }
    });

    fullscreenBtn.addEventListener('click', () => {
      if (frame.requestFullscreen) {
        frame.requestFullscreen();
      } else if (frame.webkitRequestFullscreen) {
        frame.webkitRequestFullscreen();
      } else if (frame.msRequestFullscreen) {
        frame.msRequestFullscreen();
      }
    });

    document.addEventListener('keydown', function(e) {
      if ((e.ctrlKey || e.metaKey) && e.key === 's') {
        e.preventDefault();
        document.querySelector('form').submit();
      }
      
      if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
        e.preventDefault();
        setPreview(ta.value);
      }
      
      if (e.target === ta && e.key === 'Tab') {
        e.preventDefault();
        const start = ta.selectionStart;
        const end = ta.selectionEnd;
        
        if (e.shiftKey) {
          const beforeCursor = ta.value.substring(0, start);
          const afterCursor = ta.value.substring(end);
          const lines = beforeCursor.split('\n');
          const currentLine = lines[lines.length - 1];
          
          if (currentLine.startsWith('  ')) {
            lines[lines.length - 1] = currentLine.substring(2);
            ta.value = lines.join('\n') + afterCursor;
            ta.selectionStart = ta.selectionEnd = start - 2;
          }
        } else {
          ta.value = ta.value.substring(0, start) + '  ' + ta.value.substring(end);
          ta.selectionStart = ta.selectionEnd = start + 2;
        }
        
        scheduleUpdate();
      }
      
      if (e.key === 'Escape') {
        closeAdManager();
      }
    });

    document.getElementById('adManagerModal').addEventListener('click', function(e) {
      if (e.target === this) {
        closeAdManager();
      }
    });

    document.addEventListener('DOMContentLoaded', () => {
      setPreview(ta.value);
      switchTab('<%= isEdit && page.thumbnail ? "keep" : "random" %>');
    });
  </script>
</body>
</html>